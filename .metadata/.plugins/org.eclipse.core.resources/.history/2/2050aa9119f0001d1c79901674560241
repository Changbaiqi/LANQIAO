package lanqiao;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

public class Ñ¡¿Î {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc= new Scanner(System.in);
		
		int N = sc.nextInt();
		int M = sc.nextInt();
		
		ArrayList<Integer> map[] = new ArrayList[N+1];
		for(int i =0 ; i < map.length ; ++i) {
			map[i] = new ArrayList<Integer>();
		}
		
		int k[] = new int[N+1];
		int s[] = new int[N+1];
		
		for(int i=1 ; i <=N ; ++i) {
			k[i] = sc.nextInt();
			s[i] = sc.nextInt();
			map[k[i]].add(i);
		}
		
		
		int dp[][] = new int[M+1][M+1];

		dfs(dp,k,s,map,0,M);
		System.out.println(Math.max(dp[0][0],dp[0][1]));
		
	}
	
	public static void dfs(int dp[][],int k[],int s[],ArrayList<Integer> map[],int root,int M) {
		

		for(int i = 0 ; i < map[root].size() ; ++i) {
			dfs(dp,k,s,map,map[root].get(i),M);
			
			for(int y=M ; y>=0; --y) {
				for(int x = 0 ; x <=y-1 ; ++x) {
					if((x+1)<=y)
						dp[root][y] = Math.max(dp[root][y], dp[x][y-x-1]+dp[map[root].get(i)][x]+s[root]);
				}
			}
			
		}
	}

}
