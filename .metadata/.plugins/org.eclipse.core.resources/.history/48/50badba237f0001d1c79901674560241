package lanqiao;

import java.util.ArrayList;
import java.util.Scanner;

/**
 * https://www.luogu.com.cn/problem/P2014
 * @author 长白崎
 *
 */
public class 选课 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc= new Scanner(System.in);
		
		int N = sc.nextInt(); //功课
		int M = sc.nextInt(); //选择多少
		
		//用于存储每个father 结点下的的son结点
		ArrayList<Integer> map[] = new ArrayList[N+1];
		//初始化填充ArrayList
		for(int i =0 ; i < map.length ; ++i) {
			map[i] = new ArrayList<Integer>();
		}
		
		int k[] = new int[N+1]; //用于存储直接选修课
		int s[] = new int[N+1]; //用于存储每门课的学分
		
		for(int i=1 ; i <=N ; ++i) {
			k[i] = sc.nextInt();
			s[i] = sc.nextInt();
			map[k[i]].add(i);
		}
		
		 //dp数组
		int dp[][] = new int[N+1][M+1];

		dfs(dp,k,s,map,0,M);
		System.out.println(dp[0][M]);
		
	}
	
	public static void dfs(int dp[][],int k[],int s[],ArrayList<Integer> map[],int root,int M) {
		

//		for(int i = 0 ; i < map[root].size() ; ++i) {
//			int point = map[root].get(i);
//			dfs(dp,k,s,map,point,M);
//			
//			for(int y=M ; y>=0; --y) { //M为需要选多少节课
//				for(int x = 0 ; x <=y-1 ; ++x) { //x为子树的每个树枝，或者说
//					if((x+1)<=y)
//						dp[root][y] = Math.max(dp[root][y], dp[point][x]+dp[root][y-x-1]+s[point]);
//				}
//			}
//			
//		}
		
		for() {
			
		}
		
	}

}
