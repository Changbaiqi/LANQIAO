package lanqiao;

import java.io.IOException;
import java.io.InputStream;
import java.util.Scanner;

public class BFSBFSBFS {

	static int kmin = Integer.MAX_VALUE;
	static int emin = Integer.MAX_VALUE;
	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		Scanner sc = new Scanner(System.in);
		InputStream inputStream = System.in;
		int T = sc.nextInt();
		
		int n = sc.nextInt();
		int m = sc.nextInt();
		
		char map[][] = new char[n][m];
		
		for(int y = 0 ; y< n;++y) {
			for(int x = 0 ; x < m ; ++x) {
			map[y][x] = (char)inputStream.read() ;
			}
		}
	}
	
	
	public static void dfs(char map[][],boolean state[][],int x ,int y,int kx,int ky,int px,int py,int step,int model) {
		
		if(model==1 && x==kx && y==ky) {
			
			boolean pstate[][] = new boolean[state.length][state[0].length];
			dfs(map,pstate,x,y,kx,ky,px,py,0,2);
			return;
		}
		
		if(model==2 && x==px && y==py) {
			emin = Math.min(pmin, step);
			return;
		}
		
		
		int next[][] = {
				{x,y-1},
				{x,y+1},
				{x-1,y},
				{x+1,y}
		};
		
		for(int i= 0 ; i< next.length ; ++i) {
			
			//¹ýÂË
			if(next[i][0]<0 || next[i][1]<0 || next[i][0]>=map[0].length || next[i][1] >= map.length)
				continue;
			
			if(map[next[i][1]][next[i][0]]=='#')
				continue;
			
			if(state[next[i][1]][next[i][0]])
				continue;
			if(model==1 && map[next[i][1]][next[i][0]]=='E')
			
			state[next[i][1]][next[i][0]] = true;
			dfs(map,state,x,y,kx,ky,px,py,step+1,model);
			state[next[i][1]][next[i][0]] = false;
		}
		
		
	}
	

}
